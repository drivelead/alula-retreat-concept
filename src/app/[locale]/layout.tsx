import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";

import { getDirection } from "@/lib/utils";
import { Locale } from "@/lib/types/i18n";

import LocaleSwitch from "@/components/i18n/locale-switch";
import I18NProvider from "@/components/i18n/translations-provider";

import "../globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

type RootLayoutProps = {
  children: React.ReactNode;
  params: Promise<{ locale: Locale }>;
};

export default async function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  const { locale } = await params;
  return (
    <html lang={locale} dir={getDirection(locale)}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased relative`}
      >
        {/* pass locale to client-side i18n provider */}
        <I18NProvider locale={locale} namespaces={[]} resources={[]}>
          {children}
          <div className="fixed bottom-2 right-2 z-10 rounded-full px-2 py-1 bg-white shadow border border-neutral-400">
            <LocaleSwitch />
          </div>
        </I18NProvider>
      </body>
    </html>
  );
}
